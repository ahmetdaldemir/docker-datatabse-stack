
services:
  # MySQL 8.0
  mysql:
    image: mysql:8.0
    container_name: global_mysql
    restart: unless-stopped
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-dev_db}
      MYSQL_USER: ${MYSQL_USER:-dev_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-dev_pass}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/conf.d/my.cnf
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-root}"]
      timeout: 20s
      retries: 10
    networks:
      - global_databases_net

  # PostgreSQL 16
  postgres:
    image: postgres:16-alpine
    container_name: global_postgres
    restart: unless-stopped
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-dev_db}
      POSTGRES_USER: ${POSTGRES_USER:-dev_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-dev_pass}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dev_user} -d ${POSTGRES_DB:-dev_db}"]
      timeout: 20s
      retries: 10
    networks:
      - global_databases_net

  # Redis
  redis:
    image: redis:alpine
    container_name: global_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-dev_pass}
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 20s
      retries: 10
    networks:
      - global_databases_net

  # MongoDB
  mongodb:
    image: mongo:7
    container_name: global_mongodb
    restart: unless-stopped
    ports:
      - "${MONGO_PORT:-27017}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-admin_pass}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE:-dev_db}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      timeout: 20s
      retries: 10
    networks:
      - global_databases_net

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: global_elasticsearch
    restart: unless-stopped
    ports:
      - "${ELASTICSEARCH_HTTP_PORT:-9200}:9200"
      - "${ELASTICSEARCH_TRANSPORT_PORT:-9300}:9300"
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=${ES_JAVA_OPTS:--Xms512m -Xmx512m}"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      timeout: 20s
      retries: 10
    networks:
      - global_databases_net

  # Redis Commander (Redis GUI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: global_redis_ui
    restart: unless-stopped
    ports:
      - "${REDIS_COMMANDER_PORT:-8082}:8081"
    environment:
      REDIS_HOSTS: redis:global_redis:6379:0:${REDIS_PASSWORD:-dev_pass}
    depends_on:
      - redis
    networks:
      - global_databases_net

  # Mongo Express (MongoDB GUI)
  mongo-express:
    image: mongo-express:latest
    container_name: global_mongo_ui
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8083}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_ROOT_PASSWORD:-admin_pass}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-admin_pass}@mongodb:27017/
      ME_CONFIG_BASICAUTH: false
    depends_on:
      - mongodb
    networks:
      - global_databases_net

  # phpMyAdmin (MySQL GUI)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: global_phpmyadmin
    restart: unless-stopped
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
    depends_on:
      - mysql
    networks:
      - global_databases_net

  # Adminer (Universal DB GUI)
  adminer:
    image: adminer:latest
    container_name: global_adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8084}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    networks:
      - global_databases_net

networks:
  global_databases_net:
    driver: bridge
    name: ${NETWORK_NAME:-global_databases_network}

volumes:
  mysql_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  elasticsearch_data:
    driver: local

